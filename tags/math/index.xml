<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>math on René's Blog</title><link>https://filipre.github.io/tags/math/</link><description>Recent content in math on René's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 13 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://filipre.github.io/tags/math/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting a Royal Flush in Video Poker</title><link>https://filipre.github.io/posts/royal-flush-in-video-poker/</link><pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate><guid>https://filipre.github.io/posts/royal-flush-in-video-poker/</guid><description>Some months ago I came across the Twitch streamer Joshimuz who has quite an interesting project: He tries to play through GTA San Andreas by solving everything. Not only he tries to achieve 100 % but he also set his own goals and challenges. At the same time, he gives insights into a lot of (speed running) techniques, interesting bugs and a little bit of game development. If you like content like that, you should definitely check out his video series True 100%+ on Youtube.</description></item><item><title>Master's Thesis: Asynchronous Optimization Algorithms</title><link>https://filipre.github.io/posts/masters-thesis/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>https://filipre.github.io/posts/masters-thesis/</guid><description>Today, I finished my master&amp;rsquo;s thesis with the Computer Vision chair under Prof. Dr. Daniel Cremers. I surveyed several distributed, asynchronous optimization algorithms, gave insights into their convergence theory and performed experiments on the &amp;ldquo;delayed&amp;rdquo; versions of Stochastic Gradient Descent (SGD) and of the Alternating Direction Method of Multipliers algorithm (ADMM). You can find my thesis and its abstract below.
Download
Abstract Recently, distributed optimization became more and more popular due to the increase in available training data and available computing power.</description></item><item><title>Separating the Foreground and Background of a Video</title><link>https://filipre.github.io/posts/separating-foreground-and-background/</link><pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate><guid>https://filipre.github.io/posts/separating-foreground-and-background/</guid><description>Currently, I am taking a class called &amp;ldquo;Convex Optimization for Machine Learning &amp;amp; Computer Vision&amp;rdquo;. Even though the lectures are quite theoretical, the programming homework are not and we do some interesting projects like this one: How would you separate the background and the foreground of a video using optimization?
Most likely, you would somehow make the assumption that the background takes most of the space and stays still while the foreground are all the smaller parts that are moving.</description></item></channel></rss>